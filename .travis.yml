---
sudo: required
cache: pip

env:
  global:
    - HELM_URL=https://storage.googleapis.com/kubernetes-helm
    - HELM_TGZ=helm-v2.14.1-linux-amd64.tar.gz
    - CHANGE_MINIKUBE_NONE_USER=true
    - K8S_VERSION="v1.13.1"
    - MINIKUBE_VERSION="v1.7.3"

install:
  # Installing Helm
  - wget -q ${HELM_URL}/${HELM_TGZ}
  - tar xzfv ${HELM_TGZ}
  - PATH=`pwd`/linux-amd64/:$PATH

before_script:
  - sudo mount --make-rshared /
  - sudo apt-get install -y socat
  # Download kubectl, which is a requirement for using minikube.
  - curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/${K8S_VERSION}/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
  # Download minikube.
  - curl -Lo minikube https://github.com/kubernetes/minikube/releases/download/${MINIKUBE_VERSION}/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
  - sudo minikube start --vm-driver=none --kubernetes-version=${K8S_VERSION}
  - helm init --wait


script:
  - kubectl cluster-info
  - helm dependency update ./galaxy
  - helm install -f helm-configs/.travis-deployment.yaml --name travis ./galaxy
  # Check charts format in the meantime.
  - >
     for dir in galaxy; do
      helm lint $dir
      if [ $? != 0 ]; then
       travis_terminate 1
      fi
     done
  # Describe pods as they are sent to run.
  - >
     for pod in $(kubectl get pods | awk '{ print $1 }' | grep -v postgres | grep galaxy); do
      kubectl describe pods/$pod
     done
  # Show pod logs/describe if there is an error
  - >
     bash util/wait-for-deployment -n default -t 600 $(kubectl get deployment | awk '{ print $1 }' | grep 'galaxy-web$');
     if [ $? != 0 ]; then
       for pod in $(kubectl get pods | awk '{ print $1 }' | grep -v postgres | grep galaxy); do
         kubectl logs $pod
       done
       for pod in $(kubectl get pods | awk '{ print $1 }' | grep -v postgres | grep galaxy); do
         kubectl describe pods/$pod
       done
     fi
  - kubectl get pods
  - kubectl get deployments
