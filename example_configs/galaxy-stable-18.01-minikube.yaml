# Relevant containers:
# Web:          pcm32/galaxy-web-k8s:v18.01
# Init:         pcm32/galaxy-init:v18.01
# Postgres:     pcm32/galaxy-postgres:9.6.5_for_18.01
# Proftpd:      pcm32/galaxy-proftpd:for_galaxy_v18.01

# Default values for galaxy-stable.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1

# Settings for the init image
init:
  image:
    repository: pcm32/galaxy-init
    tag: v18.01
    pullPolicy: Always
  resources: {}

image:
  repository: pcm32/galaxy-web-k8s
  tag: v18.01
  pullPolicy: Always

# Probably not needed as all on /export
tools:
  destination: "/export/tools"

# Settings for k8s job runner
k8s:
  supp_groups:
  fs_group:

# Admin user settings
admin:
  email: "admin@email.do"
  password: "admin-pass"
  api_key: "qwertyqweqwe"
  username: admin

galaxy_conf:
  brand: "k8s"
  url: "localhost"

# development_folder:
service:
  type: NodePort
  port: 80
  nodePortExposed: 30700

## Persist data to a persistent volume
persistence:
  enabled: true
  name: &pvcname galaxy-pvc
  storageClass: "-"
  accessMode: ReadWriteMany
  size: 15Gi
  subPath: ""

  # optional settings to enable minikube PV
  minikube:
    enabled: true
    hostPath: "/data/galaxy-stable-18.01"

ingress:
  enabled: false
  # enable to add a custom nginx replication controller for nginx.
  # Leave diabled and enable nginx annotation to use kube provider managed ingress controller.
  self_managed: false
  hosts:
    - chart-example.local
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  tls:
    # Secrets must be manually created in the namespace.
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  #requests:
  #  cpu: 100m
  #  memory: 128Mi

condor:
    enabled: false

postgresql:
    enabled: true
    image: "pcm32/galaxy-postgres"
    imageTag: "9.6.5_for_18.01"
    postgresDatabase: "galaxydb"
    postgresUser: "galaxy"
    postgresPassword: "change-me"
    persistence:
        existingClaim: *pvcname
        subPath: "postgres"
proftpd:
  enabled: true
  generate_ssh_key: true
  image:
    repository: "pcm32/galaxy-proftpd"
    tag: "for_galaxy_v18.01"
  passive_port:
    low: 30000
    high: 30010
  use_sftp: true
  generate_ssh_key: false
  service:
    type: NodePort
    port: 22
    # Only effective if service.type is NodePort
    nodePortExposed: 30722
