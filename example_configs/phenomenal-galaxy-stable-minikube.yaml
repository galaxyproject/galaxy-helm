# Default values for galaxy-stable.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1
galaxy:
  init:
    image:
      repository: container-registry.phenomenal-h2020.eu/phnmnl/galaxy-init-pheno-flavoured
      tag: dev_v17.09-pheno-lr_cv1.6.180
      pullPolicy: IfNotPresent
    resources: {}
  backend:
    postgres: true
  image:
    repository: container-registry.phenomenal-h2020.eu/phnmnl/galaxy-web-k8s
    tag: dev_v17.09-pheno-lr_cv1.6.180
    pullPolicy: IfNotPresent
# Probably not needed as all on /export
# tools:
#    destination: "/export/tools"
  destinations_default: "k8s"
  k8s:
    supp_groups: 0
    fs_group: 0
  admin:
    email: "youremail@domain"
    password: "yourpassword"
    api_key: "kasdnasdlajksdka"
    username: admin
    allow_user_creation: "False"
#  smtp:
#    server: 
#    username: 
#    password: 
#    email_from: 
#    ssl: 
  instance_resource_url: "localhost" 
  internal_port: 80
  node_port_exposed: 30700
  create_pvc: true
  pvc:
    name: galaxy-pvc
    capacity: "15Gi"
    # subPath:
# development_folder:
service:
  name: galaxy-svc
  type: NodePort
pv_minikube: true
pv:
  minikube:
     hostPath: /data/galaxy-data-stable
use_ingress: false
external_ingress_controller: false 
ingress:
  enabled: false
  # Used to create Ingress record (should used with service.type: ClusterIP).
  hosts:
    - chart-example.local
  annotations:
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  tls:
    # Secrets must be manually created in the namespace.
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious 
  # choice for the user. This also increases chances charts run on environments with little 
  # resources, such as Minikube. If you do want to specify resources, uncomment the following 
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  #requests:
  #  cpu: 100m
  #  memory: 128Mi
postgresql:
    enabled: true
    image: "pcm32/galaxy-postgres"
    imageTag: "latest"
    postgresDatabase: "galaxydb"
    postgresUser: "galaxy"
    postgresPassword: "change-me"
    existingClaim: "galaxy-pvc"
    subPath: "postgres"
legacy:
  pre_k8s_16: false
