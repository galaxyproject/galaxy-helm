apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "galaxy.fullname" . }}
  labels:
    app: {{ template "galaxy.name" . }}
    chart: {{ template "galaxy.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
        app: {{ template "galaxy.name" . }}
        release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "galaxy.name" . }}
        release: {{ .Release.Name }}
      annotations:
        checksum/galaxy_conf: {{ include (print $.Template.BasePath "/galaxy_conf_cfgmap.yaml") . | sha256sum }}
        checksum/container_conf: {{ include (print $.Template.BasePath "/galaxy_container_cfgmap.yaml") . | sha256sum }}
    spec:
      initContainers:
        - name: galaxy-init
          image: "{{ .Values.init.image.repository }}:{{ .Values.init.image.tag }}"
          imagePullPolicy: {{ .Values.init.image.pullPolicy }}
          env:
            - name: "DISABLE_SLEEPLOCK"
              value: "yes"
            {{- if .Values.init.force_copy }}
            - name: "GALAXY_INIT_FORCE_COPY"
              value: {{ .Values.init.force_copy }}
            {{- end }}
          volumeMounts:
            - mountPath: {{ .Values.export_dir }}
              name: {{ .Values.persistence.name }}
              {{- if .Values.persistence.subPath }}
              subPath: {{ .Values.persistence.subPath }}
              {{- end }}
          resources:
{{ toYaml .Values.init.resources | indent 12 }}
        {{- if .Values.postgresql.enabled }}
        - name: postgres-listener
          image: alpine
          imagePullPolicy: IfNotPresent
          command: [ "sh", "-c", "for i in $(seq 1 200); do nc -z -w3 {{ template "postgresql.fullname" . }} 5432 && exit 0 || sleep 3; done; exit 1"]
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
          - configMapRef:
              name: {{ template "galaxy.fullname" . }}-galaxy-conf
          - configMapRef:
              name: {{ template "galaxy.fullname" . }}-container-cfgmap
          env:
              {{- if .Values.postgresql.enabled }}
              - name: "GALAXY_SEC_DB_PASS"
                valueFrom:
                  secretKeyRef:
                      name: {{ template "galaxy.fullname" . }}-admin-secret
                      key: database_password
              {{- end }}
              {{- if and .Values.admin.email (and .Values.admin.password .Values.admin.api_key) }}
              - name: "GALAXY_ADMIN_PASSWORD"
                valueFrom:
                  secretKeyRef:
                        name: {{ template "galaxy.fullname" . }}-admin-secret
                        key: password
              - name: "GALAXY_DEFAULT_ADMIN_PASSWORD"
                valueFrom:
                  secretKeyRef:
                        name: {{ template "galaxy.fullname" . }}-admin-secret
                        key: password
              - name: "GALAXY_DEFAULT_ADMIN_KEY"
                valueFrom:
                  secretKeyRef:
                        name: {{ template "galaxy.fullname" . }}-admin-secret
                        key: api-key
              {{- end }}
          command: ["/bin/bash","-c","{{ if not .Values.postgresql.enabled }}mkdir -p {{ .Values.export_dir }}/database-sqlite && {{ end }}export GALAXY_CONFIG_DATABASE_CONNECTION=${GALAXY_SEC_DB_ENGINE}://${GALAXY_SEC_DB_USER}:${GALAXY_SEC_DB_PASS}@${GALAXY_SEC_DB_HOST}/${GALAXY_SEC_DB_NAME}?client_encoding=utf8 && /usr/bin/startup"]
          workingDir: {{ .Values.export_dir }}
          lifecycle: 
            preStop:
              exec:
                 command:
                     - "./run.sh"
                     - "--stop" 
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /galaxy
              port: 80
            initialDelaySeconds: 120
            periodSeconds: 6
          livenessProbe:
            httpGet:
              path: /galaxy
              port: 80
            initialDelaySeconds: 240
            periodSeconds: 60
            failureThreshold: 10
          volumeMounts:
            - mountPath: {{ .Values.export_dir }}
              name: {{ .Values.persistence.name }}
              {{- if .Values.persistence.subPath }}
              subPath: {{ .Values.persistence.subPath }}
              {{- end }}
            {{- if .Values.development_folder }}
            - mountPath: "{{ .Values.export_dir }}/config/galaxy.ini.injected"
              name: galaxy-ini 
            - mountPath: "{{ .Values.export_dir }}/config/job_conf.xml"
              name: galaxy-job-conf 
            - mountPath: "{{ .Values.export_dir }}/config/tool_conf.xml"
              name: galaxy-tool-conf
            - mountPath: "{{ .Values.export_dir }}/tools"
              name: tools           
            {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
{{- if or .Values.k8s.supp_groups .Values.k8s.fs_group }}
      securityContext:
{{- if .Values.k8s.supp_groups }}
        supplementalGroups: [{{ .Values.k8s.supp_groups }}]
{{- end }}
{{- if .Values.k8s.fs_group }}
        fsGroup: {{ .Values.k8s.fs_group }}
{{- end }}
{{- end }}
      volumes:
        - name: {{ .Values.persistence.name }}
          persistentVolumeClaim:
              claimName: {{ .Values.persistence.existingClaim | default .Values.persistence.name }}
        {{- if .Values.development_folder }}
        - name: galaxy-ini
          hostPath:
            path: {{ .Values.development_folder }}/config/galaxy.ini
        - name: galaxy-job-conf
          hostPath:
            path: {{ .Values.development_folder }}/config/job_conf.xml
        - name: galaxy-tool-conf
          hostPath:
            path: {{ .Values.development_folder }}/config/tool_conf.xml
        - name: tools
          hostPath:
            path: {{ .Values.development_folder }}/tools
        {{- end }}
