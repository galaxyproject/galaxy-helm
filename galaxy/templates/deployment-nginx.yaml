apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "galaxy.fullname" . }}-nginx
  labels:
    {{- include "galaxy.labels" . | nindent 4 }}
{{- with .Values.webHandlers.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.webHandlers.replicaCount }}
  selector:
    matchLabels:
      {{- include "galaxy.selectorLabels" $ | nindent 6 }}
      app.kubernetes.io/component: galaxy-nginx
  template:
    metadata:
      labels:
        {{- include "galaxy.selectorLabels" $ | nindent 8 }}
        app.kubernetes.io/component: galaxy-nginx
      annotations:
        checksum/nginx_conf: {{ include (print $.Template.BasePath "/configmap-nginx.yaml") . | sha256sum }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "galaxy.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      {{- if .Values.webHandlers.podSpecExtra -}}
        {{- tpl (toYaml .Values.webHandlers.podSpecExtra) . | nindent 6 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}-nginx
          image: "{{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag }}"
          imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
          ports:
            - name: galaxy-nginx
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: galaxy-data
              mountPath: {{ .Values.persistence.mountPath }}
            - name: galaxy-data
              mountPath: /galaxy/server/config/mutable/
              subPath: config
            {{- if .Values.initJob.downloadToolConfs.enabled }}
            - name: galaxy-data
              mountPath: {{ .Values.initJob.downloadToolConfs.volume.mountPath }}
              subPath: {{ .Values.initJob.downloadToolConfs.volume.subPath }}
            {{- end }}
            {{- if .Values.cvmfs.enabled }}
            {{- range $key, $entry := .Values.cvmfs.galaxyPersistentVolumeClaims }}
            - name: cvmfs-gxy-{{ $key }}
              mountPath: {{ $entry.mountPath }}
            {{- end -}}
            {{- end }}
            {{- if .Values.extraVolumeMounts }}
            {{- .Values.extraVolumeMounts | toYaml | nindent 12 }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          lifecycle:
            preStop:
              exec:
                command: ["/usr/sbin/nginx","-s","quit"]
      volumes:
        - name: nginx-conf
          configMap:
            name: {{ template "galaxy.fullname" $ }}-nginx-conf
        - name: galaxy-data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ template "galaxy.pvcname" . }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- if .Values.cvmfs.enabled }}
        {{- range $key, $entry := .Values.cvmfs.galaxyPersistentVolumeClaims }}
        - name: cvmfs-gxy-{{ $key }}
          persistentVolumeClaim:
            claimName: {{ template "galaxy.fullname" $ -}}-cvmfs-gxy-{{ $key }}-pvc
        {{- end }}
        {{- end }}
        {{- if .Values.extraVolumes }}
        {{- .Values.extraVolumes | toYaml | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
