apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "galaxy.fullname" . }}-init-db-{{ randAlphaNum 5 | lower }}
  labels:
    {{- include "galaxy.labels" . | nindent 4 }}
spec:
  {{- if .Values.setupJob.ttlSecondsAfterFinished }}
  ttlSecondsAfterFinished: {{ .Values.setupJob.ttlSecondsAfterFinished }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "galaxy.labels" . | nindent 8 }}
      annotations:
        checksum/galaxy_conf: {{ include (print $.Template.BasePath "/configs-galaxy.yaml") . | sha256sum }}
        checksum/galaxy_rules: {{ include (print $.Template.BasePath "/configmap-galaxy-rules.yaml") . | sha256sum }}
        checksum/galaxy_extras: {{ include (print $.Template.BasePath "/configmap-extra-files.yaml") . | sha256sum }}
    spec:
      securityContext:
        runAsUser: {{ .Values.setupJob.runAsUser }}
        runAsGroup: 101
        fsGroup: 101
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: OnFailure
      initContainers:
        - name: {{ .Chart.Name }}-init-postgres
          image: alpine:3.7
          command: ['sh', '-c', 'chown 101:101 {{ .Values.persistence.mountPath }}; until nc -z -w3 {{ template "galaxy-postgresql.fullname" . }} 5432; do echo waiting for galaxy-postgres service; sleep 1; done;']
          volumeMounts: 
            - name: galaxy-data
              mountPath: {{ .Values.persistence.mountPath }}
      containers:
        - name: {{ .Chart.Name }}-db-init
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.setupJob.createDatabase }}
          args:
            - 'sh'
            - '-c'
            - >
              if (ls /galaxy/server/config/mutable/ | grep -q "db_init_done*");
                then /galaxy/server/manage_db.sh upgrade && echo "Done" > /galaxy/server/config/mutable/db_init_done_{{.Release.Revision}};
                else (/galaxy/server/create_db.sh && echo "Done" > /galaxy/server/config/mutable/db_init_done_{{.Release.Revision}};);
              fi;
          {{- else }}
          args:
            - 'sh'
            - '-c'
            - '/galaxy/server/manage_db.sh upgrade && echo "Done" > /galaxy/server/config/mutable/db_init_done_{{.Release.Revision}};'
          {{- end }}
          env:
          {{ include "galaxy.podEnvVars" . }}
          volumeMounts:
            {{- range $key, $entry := .Values.extraFileMappings -}}
            {{- if $entry.applyToJob }}
            - name: {{ include "galaxy.getExtraFilesUniqueName" $key }}
              mountPath: {{ $key }}
              subPath: {{ include "galaxy.getFilenameFromPath" $key }}
            {{- end }}
            {{- end }}
            {{- range $key,$entry := .Values.configs }}
            {{ if $entry -}}
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/{{ $key }}
              subPath: {{ $key }}
            {{- end -}}
            {{- end }}
            {{- range $key,$entry := .Values.jobs.rules }}
            - name: galaxy-job-rules
              mountPath: /galaxy/server/lib/galaxy/jobs/rules/{{ $key }}
              subPath: {{ $key }}
            {{- end }}
            - name: galaxy-data
              mountPath: /galaxy/server/config/mutable/
              subPath: config
            {{- if .Values.cvmfs.enabled }}
            {{- range $key, $entry := .Values.cvmfs.galaxyPersistentVolumeClaims }}
            - name: cvmfs-gxy-{{ $key }}
              mountPath: {{ $entry.mountPath }}
            {{- end -}}
            {{- end }}
            {{- if .Values.extraVolumeMounts }}
            {{- tpl (.Values.extraVolumeMounts | toYaml | nindent 12) . }}
            {{- end }}
      volumes:
        - name: galaxy-conf-files
          {{- if .Values.useSecretConfigs }}
          secret:
            secretName: {{ template "galaxy.fullname" . }}-configs
          {{- else }}
          configMap:
            name: {{ template "galaxy.fullname" . }}-configs
          {{- end }}
        {{- range $key, $entry := .Values.extraFileMappings -}}
        {{- if $entry.applyToSetupJob }}
        - name: {{ include "galaxy.getExtraFilesUniqueName" $key }}
          {{- if $entry.useSecret }}
          secret:
            secretName: {{ printf "%s-%s" (include "galaxy.fullname" $) (include "galaxy.getExtraFilesUniqueName" $key) }}
          {{- else }}
          configMap:
            name: {{ printf "%s-%s" (include "galaxy.fullname" $) (include "galaxy.getExtraFilesUniqueName" $key) }}
          {{- end }}
        {{- end }}
        {{- end }}
        - name: galaxy-job-rules
          configMap:
            name: {{ template "galaxy.fullname" . }}-job-rules
        - name: galaxy-data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ template "galaxy.pvcname" . }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- if .Values.cvmfs.enabled }}
        {{- range $key, $entry := .Values.cvmfs.galaxyPersistentVolumeClaims }}
        - name: cvmfs-gxy-{{ $key }}
          persistentVolumeClaim:
            claimName: {{ template "galaxy.fullname" $ -}}-cvmfs-gxy-{{ $key }}-pvc
        {{- end }}
        {{- end }}
        {{- if .Values.extraVolumes }}
        {{- tpl (.Values.extraVolumes | toYaml | nindent 8) . }}
        {{- end }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "galaxy.fullname" . }}-init-mounts-{{ randAlphaNum 5 | lower }}
  labels:
    {{- include "galaxy.labels" . | nindent 4 }}
spec:
  {{- if .Values.setupJob.ttlSecondsAfterFinished }}
  ttlSecondsAfterFinished: {{ .Values.setupJob.ttlSecondsAfterFinished }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "galaxy.labels" . | nindent 8 }}
      annotations:
        checksum/galaxy_conf: {{ include (print $.Template.BasePath "/configs-galaxy.yaml") . | sha256sum }}
        checksum/galaxy_rules: {{ include (print $.Template.BasePath "/configmap-galaxy-rules.yaml") . | sha256sum }}
        checksum/galaxy_extras: {{ include (print $.Template.BasePath "/configmap-extra-files.yaml") . | sha256sum }}
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.setupJob.securityContext | nindent 8 }}
      restartPolicy: OnFailure
      containers:
        - name: {{ .Chart.Name }}-init-mounts
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ['sh', '-c', {{ include "galaxy.init-container-commands" . | squote }}]
          volumeMounts:
            {{- range $key, $entry := .Values.extraFileMappings -}}
            {{- if $entry.applyToSetupJob }}
            - name: {{ include "galaxy.getExtraFilesUniqueName" $key }}
              mountPath: {{ $key }}
              subPath: {{ include "galaxy.getFilenameFromPath" $key }}
            {{- end }}
            {{- end }}
            {{- range $key,$entry := .Values.configs }}
            {{ if $entry -}}
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/{{ $key }}
              subPath: {{ $key }}
            {{- end -}}
            {{- end }}
            {{- range $key,$entry := .Values.jobs.rules }}
            - name: galaxy-job-rules
              mountPath: /galaxy/server/lib/galaxy/jobs/rules/{{ $key }}
              subPath: {{ $key }}
            {{- end }}
            - name: galaxy-data
              mountPath: {{ .Values.persistence.mountPath }}
            - name: galaxy-data
              mountPath: /galaxy/server/config/mutable/
              subPath: config
            {{- if .Values.cvmfs.enabled }}
            {{- range $key, $entry := .Values.cvmfs.galaxyPersistentVolumeClaims }}
            - name: cvmfs-gxy-{{ $key }}
              mountPath: {{ $entry.mountPath }}
            {{- end -}}
            {{- end }}
            {{- if .Values.extraVolumeMounts }}
            {{- tpl (.Values.extraVolumeMounts | toYaml | nindent 12) . }}
            {{- end }}
{{ if .Values.setupJob.downloadToolConfs.enabled }}
        - name: {{ .Chart.Name }}-init-cloud-repo
          image: alpine:3.7
          command: ['sh', '-c', '{{- include "galaxy.extract-archive-if-changed-command" (dict "extractPath" .Values.setupJob.downloadToolConfs.volume.mountPath "downloadUrl" .Values.setupJob.downloadToolConfs.archives.startup) -}} && echo "Done" > /galaxy/server/config/mutable/init_clone_done_{{.Release.Revision}}']
          volumeMounts:
            - name: galaxy-data
              mountPath: {{ .Values.setupJob.downloadToolConfs.volume.mountPath }}
              subPath: {{ .Values.setupJob.downloadToolConfs.volume.subPath }}
            - name: galaxy-data
              mountPath: /galaxy/server/config/mutable/
              subPath: config
        - name: {{ .Chart.Name }}-init-cloud-repo-partial
          image: alpine:3.7
          command: ['sh', '-c', '{{- include "galaxy.extract-archive-if-changed-command" (dict "extractPath" .Values.setupJob.downloadToolConfs.volume.mountPath "downloadUrl" .Values.setupJob.downloadToolConfs.archives.running) -}}']
          volumeMounts:
            - name: galaxy-data
              mountPath: {{ .Values.setupJob.downloadToolConfs.volume.mountPath }}
              subPath: {{ .Values.setupJob.downloadToolConfs.volume.subPath }}
        - name: {{ .Chart.Name }}-init-cloud-repo-full
          image: alpine:3.7
          command: ['sh', '-c', '{{- include "galaxy.extract-archive-if-changed-command" (dict "extractPath" .Values.setupJob.downloadToolConfs.volume.mountPath "downloadUrl" .Values.setupJob.downloadToolConfs.archives.full) -}}']
          volumeMounts:
            - name: galaxy-data
              mountPath: {{ .Values.setupJob.downloadToolConfs.volume.mountPath }}
              subPath: {{ .Values.setupJob.downloadToolConfs.volume.subPath }}     
{{ end }}
      volumes:
        - name: galaxy-conf-files
          {{- if .Values.useSecretConfigs }}
          secret:
            secretName: {{ template "galaxy.fullname" . }}-configs
          {{- else }}
          configMap:
            name: {{ template "galaxy.fullname" . }}-configs
          {{- end }}
        {{- range $key, $entry := .Values.extraFileMappings -}}
        {{- if $entry.applyToSetupJob }}
        - name: {{ include "galaxy.getExtraFilesUniqueName" $key }}
          {{- if $entry.useSecret }}
          secret:
            secretName: {{ printf "%s-%s" (include "galaxy.fullname" $) (include "galaxy.getExtraFilesUniqueName" $key) }}
          {{- else }}
          configMap:
            name: {{ printf "%s-%s" (include "galaxy.fullname" $) (include "galaxy.getExtraFilesUniqueName" $key) }}
          {{- end }}
        {{- end }}
        {{- end }}
        - name: galaxy-job-rules
          configMap:
            name: {{ template "galaxy.fullname" . }}-job-rules
        - name: galaxy-data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ template "galaxy.pvcname" . }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- if .Values.cvmfs.enabled }}
        {{- range $key, $entry := .Values.cvmfs.galaxyPersistentVolumeClaims }}
        - name: cvmfs-gxy-{{ $key }}
          persistentVolumeClaim:
            claimName: {{ template "galaxy.fullname" $ -}}-cvmfs-gxy-{{ $key }}-pvc
        {{- end }}
        {{- end }}
        {{- if .Values.extraVolumes }}
        {{- tpl (.Values.extraVolumes | toYaml | nindent 8) . }}
        {{- end }}
